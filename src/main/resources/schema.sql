CREATE TABLE IF NOT EXISTS users (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  name VARCHAR(255) NOT NULL,
  email VARCHAR(512) NOT NULL,
  CONSTRAINT pk_user PRIMARY KEY (id),
  CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS requests (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    DESCRIPTION  VARCHAR(2048),
    status VARCHAR(255),
    requester_id BIGINT,
        constraint requester_id_fk
            foreign key(requester_id) references requests(id)
                on update CASCADE on delete CASCADE,
    CONSTRAINT pk_requests PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS items (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(255) NOT NULL,
    description VARCHAR(2048),
    is_available BOOLEAN,
    owner_id BIGINT,
    request_id BIGINT,
    constraint OWNER_ID_FK
            foreign key (owner_id) references users(id)
                on update cascade on delete cascade,
    constraint REQUEST_ID_FK
            foreign key (request_id) references requests(id)
                on update CASCADE on delete RESTRICT,
    CONSTRAINT pk_items PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS bookings (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    start_date TIMESTAMP WITHOUT TIME ZONE,
    end_date TIMESTAMP WITHOUT TIME ZONE,
    item_id BIGINT,
    booker_id BIGINT,
    status VARCHAR(255),
        constraint ITEM_ID_FK
            foreign key (item_id) references items(id)
                on update cascade on delete cascade,
        constraint BOOKER_ID_FK
            foreign key (booker_id) references users(id)
                on update CASCADE on delete CASCADE,
    CONSTRAINT pk_bookings PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS comments (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    text  VARCHAR(4096),
    item_id BIGINT,
    author_id BIGINT,
    created TIMESTAMP WITHOUT TIME ZONE,
        constraint author_id_FK
            foreign key (author_id) references users(id)
            on update CASCADE on delete CASCADE,
   constraint item_id_comments_FK
        foreign key (item_id) references items(id)
            on update CASCADE on delete CASCADE,
    CONSTRAINT pk_comments PRIMARY KEY (id)
);

